buildscript {
    repositories {
        jcenter()
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
        maven { url "https://dl.bintray.com/jetbrains/kotlin-native-dependencies" }
    }
    dependencies {
        classpath 'de.undercouch:gradle-download-task:4.0.0-SNAPSHOT'
        classpath "com.jfrog.bintray.gradle:gradle-bintray-plugin:1.8.2-SNAPSHOT"
    }
}

apply plugin: 'de.undercouch.download'
apply plugin: "org.jetbrains.kotlin.multiplatform"
apply plugin: 'maven-publish'
apply plugin: 'com.jfrog.bintray'

group = GROUP
version = "${VERSION_NAME}${VERSION_SUFFIX}"

task downloadArchive(type: Download) {
    def release = "https://github.com/andlabs/libui/releases/download/$LIBUI_VERSION/libui-$LIBUI_VERSION"
    if (os.isWindows()) {
        src "$release-windows-amd64-mingw-static.zip"
    } else if (os.isLinux()) {
        src "$release-linux-amd64-static.tgz"
    } else if (os.isMacOsX()) {
        src "$release-darwin-amd64-static.tgz"
    }
    dest new File(buildDir, "libui-$LIBUI_VERSION.${os.isWindows() ? "zip" : "tgz"}")
    overwrite false
}

task unpackArchive(dependsOn: downloadArchive, type: Copy) {
    if (os.isWindows()) {
        from zipTree(downloadArchive.dest)
    } else {
        from tarTree(resources.gzip(downloadArchive.dest))
    }
    into buildDir
}

kotlin {
    final def publishModeEnabled = rootProject.hasProperty('publishMode')
    println "publishModeEnabled: $publishModeEnabled"

    targets {
        if (os.isWindows() || publishModeEnabled) {
            fromPreset(presets.mingwX64, 'windows') {
                compilations.main.cinterops {
                    libui { includeDirs buildDir }
                }
            }
        }
        if (os.isLinux() || publishModeEnabled) {
            fromPreset(presets.linuxX64, 'linux') {
                compilations.main.cinterops {
                    libui { includeDirs buildDir }
                }
            }
        }
        if (os.isMacOsX() || publishModeEnabled) {
            fromPreset(presets.macosX64, 'macosx') {
                compilations.main.cinterops {
                    libui { includeDirs buildDir }
                }
            }
        }
    }

    sourceSets {
        windowsMain {
            kotlin.srcDir('src/nativeMain/kotlin')
        }
        linuxMain {
            kotlin.srcDir('src/nativeMain/kotlin')
        }
        macosxMain {
            kotlin.srcDir('src/nativeMain/kotlin')
        }
    }
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.CInteropProcess).all {
    dependsOn unpackArchive
}

afterEvaluate {
    project.publishing.publications.forEach { publication ->
        publication.pom.withXml {
            def root = asNode()
            root.appendNode('name', 'libui')
            root.appendNode('description', 'Kotlin/Native interop to libui: a portable GUI library')
            root.appendNode('url', POM_SCM_URL)
            root.children().last() + {
                licenses {
                    license {
                        name 'MIT License'
                        url POM_SCM_URL
                        distribution 'repo'
                    }
                }
                developers {
                    developer {
                        id 'msink'
                        name 'Mike Sinkovsky'
                        email 'msink@permonline.ru'
                    }
                }
                scm {
                    url POM_SCM_URL
                    connection POM_SCM_CONNECTION
                    developerConnection POM_SCM_DEV_CONNECTION
                }
            }
        }
    }
}

publishing {
    repositories {
        maven { url = 'https://bintray.com/msink/kotlin-native' }
    }
}

bintrayUpload.dependsOn publishToMavenLocal

bintrayUpload.doFirst {
    publications = project.publishing.publications.collect {
        println("Uploading artifact '$it.groupId:$it.artifactId:$it.version' from publication '$it.name'")
        it
    }
}

bintray {
    user = BINTRAY_USER
    key = System.getenv('BINTRAY_API_KEY')
    override = true // for multi-platform Kotlin/Native publishing
    pkg {
        userOrg = BINTRAY_USER
        repo = BINTRAY_REPO
        name = 'libui'
        licenses = ['MIT']
        vcsUrl = POM_SCM_URL
        version {
            name = project.version
            vcsTag = project.version
            released = new Date()
        }
    }
}
