plugins {
    id 'de.undercouch.download' version '3.4.3'
    id 'kotlin-multiplatform' version '1.3.0'
}

repositories {
    jcenter()
    mavenCentral()
}

final def os = org.gradle.internal.os.OperatingSystem.current()

task downloadArchive(type: Download) {
    def release = "https://github.com/andlabs/libui/releases/download/$libuiVersion/libui-$libuiVersion"
    if (os.isWindows()) {
        src "$release-windows-amd64-mingw-static.zip"
    } else if (os.isLinux()) {
        src "$release-linux-amd64-static.tgz"
    } else if (os.isMacOsX()) {
        src "$release-darwin-amd64-static.tgz"
    }
    dest new File(buildDir, "libui-$libuiVersion.${os.isWindows() ? "zip" : "tgz"}")
    overwrite false
}

task unpackArchive(dependsOn: downloadArchive, type: Copy) {
    if (os.isWindows()) {
        from zipTree(downloadArchive.dest)
    } else {
        from tarTree(resources.gzip(downloadArchive.dest))
    }
    into buildDir
}

kotlin {
    final def nativePreset = os.isWindows() ? presets.mingwX64
                           : os.isLinux()   ? presets.linuxX64
                           : os.isMacOsX()  ? presets.macosX64
                           : /*unknown host*/ null
    targets {
        fromPreset(nativePreset, 'native') {
            compilations.main {
                cinterops {
                    libui {
                        includeDirs "${project.rootDir}/libui/build"
                    }
                }
            }
        }
    }
}

tasks[kotlin.targets.native.compilations.main.cinterops.libui.interopProcessingTaskName].dependsOn unpackArchive
